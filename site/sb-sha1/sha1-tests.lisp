(defpackage #:sb-sha1-tests
  (:use #:sb-sha1 #:cl #:sb-rt))
(in-package #:sb-sha1-tests)

(macrolet
    ((define-rfc3174-tests (test-list)
         `(progn
           ,@(loop for i upfrom 0
                   for (string count expected-result) in test-list
                   collect
                   `(deftest ,(intern (format nil "SB-SHA1.RFC3174.~A" i))
                     (string= (let* ((source-length (length ,string))
                                     (real-sequence (make-sequence 'string
                                                                   (* ,count source-length))))
                                ;; FIXME: could probably use REPLACE
                                (dotimes (j ,count)
                                  (dotimes (k source-length)
                                    (setf (aref real-sequence (+ (* j source-length)
                                                                 k))
                                          (aref ,string k))))
                                (format nil "~(~{~2,'0X~}~)"
                                        (coerce (sha1sum-sequence real-sequence) 'list)))
                      ,expected-result)
                     t)))))
  (define-rfc3174-tests
      (("abc" 1 "a9993e364706816aba3e25717850c26c9cd0d89d")
       ("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq" 1 "84983e441c3bd26ebaae4aa1f95129e5e54670f1")
       ("a" 1000000 "34aa973cd4c4daa4f61eeb2bdbad27316534016f")
       ("0123456701234567012345670123456701234567012345670123456701234567" 10 "dea356a2cddd90c7a7ecedc5ebb563934f460452"))))

(macrolet
    ((define-other-tests (test-list)
         `(progn
           ,@(loop for i upfrom 0
                   for (string . expected-result) in test-list
                   collect
                   `(deftest ,(intern (format nil "SB-SHA1.OTHER.~A" i))
                     (string=
                      (format nil "~(~{~2,'0X~}~)"
                       (coerce (sha1sum-sequence ,string) 'list))
                      ,expected-result)
                     t)))))
  (define-other-tests
      ;; exactly the same as the ones for the MD5 test suite
      (("a" . "86f7e437faa5a7fce15d1ddcb9eaeaea377667b8")
       ("aa" . "e0c9035898dd52fc65c41454cec9c4d2611bfb37")
       ("aaa" . "7e240de74fb1ed08fa08d38063f6a6a91462a815")
       ("aaaa" . "70c881d4a26984ddce795f6f71817c9cf4480e79")
       ("aaaaa" . "df51e37c269aa94d38f93e537bf6e2020b21406c")
       ("aaaaaa" . "f7a9e24777ec23212c54d7a350bc5bea5477fdbb")
       ("aaaaaaa" . "e93b4e3c464ffd51732fbd6ded717e9efda28aad")
       ("aaaaaaaa" . "b480c074d6b75947c02681f31c90c668c46bf6b8")
       ("aaaaaaaaa" . "2882f38e575101ba615f725af5e59bf2333a9a68")
       ("aaaaaaaaaa" . "3495ff69d34671d1e15b33a63c1379fdedd3a32a")
       ("aaaaaaaaaaa" . "755c001f4ae3c8843e5a50dd6aa2fa23893dd3ad")
       ("aaaaaaaaaaaa" . "384fcd160ab3b33174ea279ad26052eee191508a")
       ("aaaaaaaaaaaaa" . "897b99631295d204db13e863b296a09e70ab1d65")
       ("aaaaaaaaaaaaaa" . "128c484ff69fcdc1f82cd3781595cac5185e688f")
       ("aaaaaaaaaaaaaaa" . "7e13c003a8256cd421055563c5da6571d50713c9")
       ("aaaaaaaaaaaaaaaa" . "3499c60eea227453c779de50fc84e217e9a53a18")
       ("aaaaaaaaaaaaaaaaa" . "321a618ba6830de900738b0814d0c9f28ff2fece")
       ("aaaaaaaaaaaaaaaaaa" . "0478095c8ece0bbc11f94663ac2c4f10b29666de")
       ("aaaaaaaaaaaaaaaaaaa" . "1335bfa62671b0015c6e20766c07035868edb8f4")
       ("aaaaaaaaaaaaaaaaaaaa" . "38666b8ba500faa5c2406f4575d42a92379844c2")
       ("aaaaaaaaaaaaaaaaaaaaa" . "035a4ee5d60816878caec161d6cb8e00e9cc539b")
       ("aaaaaaaaaaaaaaaaaaaaaa" . "8c2a4e5c8f210b6aaa6c95e1c8e21351959f4541")
       ("aaaaaaaaaaaaaaaaaaaaaaa" . "85e3737bb8ab36e2866501e517c46fffc085313e")
       ("aaaaaaaaaaaaaaaaaaaaaaaa" . "b1c76aec7674865d5346b3b0d1cb2c223c53e73e")
       ("aaaaaaaaaaaaaaaaaaaaaaaaa" . "44f4647e1542a79d7d68ceb7f75d1dbf77fdebfc")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaa" . "de8280c3a1c7db377f1ec7107c7fb62d374cc09c")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaa" . "52a00b8461593ce33409d7c5d0411699cbf9cda3")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "06587751ce11a8703abc64cab55b0b96d88341aa")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "498a75f314a645671bc79a118df385d0d9948484")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "cd762363c1c11ecb48611583520bba111f0034d4")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "65cf771ad2cc0b1e8f89361e3b7bec2365b3ad24")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "68f84a59a3ca2d0e5cb1646fbb164da409b5d8f2")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "2368a1ac71c68c4b47b4fb2806508e0eb447aa64")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "82d5343f4b2f0fcf6e28672d1f1a10c434f213d5")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "f4d3e057abac5109b7e953578fa97968ea34f43a")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "6c783ce5cc13ea5ce572eddfaba02f9d1bb90905")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "9e55bf6ab8f14b37cc6f69eb7374be6c5cbd2d07")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "1290c28910a6c12c9a131f0ecb523114f20f14c2")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "4f5fc75bd3c93bccc09fc2de9c95442456053faf")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "a56559418dc7908ce5f0b24b05c78e055cb863dc")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "52cedd6b110e4330b5186478736afa5203c4f9ea")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "32e067e0414932c3edd95fc4176a54bff1ddfe29")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "7bd258f2f4cc4b02fca4ea157f55f6d88d26d954")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "df51a19b291586bf46450aec1d775f3e02799b55")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "4642fe68c57cd01fc68fc11b7f22b940328a7cc4")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "03a4de84c189a836eaee643041b34ad2386db70d")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "25883f7a0e732e9ab10e594ea59425dfe4d90359")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "3e3d6e12b933133de2caa248ea12bd193a67f206")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "1e666934c5a35f509aa31bbd9af8a37a1ed13ba6")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "6c177354157989a2c6cd7bac80465b13bea25832")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "aca32b501c231ef8e2d8703e71415bfbe4ccbc64")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "e6479c70bbac662e4cc134cb8bdaade59ff55b66")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "d9b66a0801459c8094398ef8f04700a8569c9906")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "b05d71c64979cb95fa74a33cdb31a40d258ae02e")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "c1c8bbdc22796e28c0e15163d20899b65621d65a")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "c2db330f6083854c99d4b5bfb6e8f29f201be699")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "f08f24908d682555111be7ff6f004e78283d989a")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "5ee0f8895f4e1aae6a6661de5c432e34188a5a2d")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "dbc8b8f59ff85a2b1448ed873484b14bf0507246")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "13d956033d9af449bfe2c4ef78c17c20469c4bf1")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "aeab141db28af3353283b5ccb2a322df0b9b5f56")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "67b4b3923fa178d788a9611b76446c96431071f2")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "03f09f5b158a7a8cdad920bddc29b81c18a551f5")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "0098ba824b5c16427bd7a1122a5a442a25ec644d")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "11655326c708d70319be2610e8a57d9a5b959d3b")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "a4e77d9c0c9344921a0ac998b442ad572afdc5fb")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "c70cc62a2ecb15f4bf1b70904dd621373d79f311")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "dca1c821b7970a33a9a0524892ce7e49581591fd")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "165f932eb7f82c26d8169abfe3b665d92ea8cf4a")
       ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" . "ed6c69d9e8b4373af86303dfaa3528dfbc129902"))))