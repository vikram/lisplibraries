CL.EXT.CONFIGURATION Notes.

==============================================================================
2000-02-21 Marco Antoniotti

New version.

The basic idea is to have a more flexible configuration management. So
we now will have to take into account the setup of a DEFCONFIGURE.

The procedure will now be

1 - load or evaluate a DEFCONFIGURATION.
    This will result in
    a - a "default" configuration instance
    b - a special CONFIGURE method which will produce different
        configurations as needed
    c - a specialized SETUP method which, given a specific
        'configuration designator' will make provisions to setup all
        the proper logical translations and to ensure that all the
        needed packages, modules and systems are present in the
        current image.

==============================================================================
2000-02-22 Marco Antoniotti

Back to basics.

A simpler approach will work, assuming that a configuration will only
be produced for a single Common Lisp implementation.

A better parsing resulting in better canonicalized structures is in
order though.
