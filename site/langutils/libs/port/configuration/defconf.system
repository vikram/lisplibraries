;;; -*- Mode: CLtL -*-

;;; defconf.system --
;;; A 'configure' for Common Lisp.  The MK:DEFSYSTEM setup.

;;; Copyright (c) 2000 Marco Antoniotti, all rights reserved.
;;; This software is released under the terms of the GNU Lesser General
;;; Public License (LGPL, see file COPYING for details).

(unless (find-package "MAKE")
  (error "To build CL.EXT.CONFIGURATION by loading this file~@
          MK:DEFSYSTEM package is required.~@
          You can download MK:DEFSYSTEM from the CLOCC~@
          <http://sourceforge.net/projects/clocc/>."))

(unless (find-package "CL.ENVIRONMENT")
  (error "CL.EXT.CONFIGURATION requires the CL.ENVIRONMENT package.~@
          You can download CL.ENVIRONMENT from the CLOCC~@
          <http://sourceforge.net/projects/clocc/>."))

(mk:defsystem "CL.EXT.CONFIGURATION"
    :source-pathname ""
    :binary-pathname ""
    :source-extension "lisp"
    :components ((:file "defconf-package")
		 (:file "configuration-template"
			:depends-on ("defconf-package"))
		 (:file "configuration"
			:depends-on ("defconf-package"))
		 (:file "defconf"
			:depends-on ("configuration-template"
				     "configuration"))
		 (:module "impl-dependent"
			  :components
			  ((:file "defsys-availability")
			   
			   ;; These will become
			   ;; (:file "cmucl" :if-feature :cmucl)
			   #+cmu
			   (:file "cmucl")

			   #+allegro
			   (:file "allegro")

			   #+lispworks
			   (:file "lispworks")

			   #+clisp
			   (:file "clisp")

			   ;; These will become
			   ;; (:file "" :os-tag :unix)
			   ;; or
			   ;; (:file "unix" :os-class cl.env:unix)

			   #+unix
			   (:file "unix")

			   #+(or :mswindows :windows-32)
			   (:file "windows")

			   #+genera
			   (:file "genera")

			   #+macos
			   (:file "mac-os")

			   ;; These will become
			   ;; (:file "" :if-feature :pcl)
			   #+pcl
			   (:file "pcl-defsys")

			   #+mk-defsystem
			   (:file "mk-defsystem")

			   )
			  :depends-on ("defconf")
			  )))
    

;;; end of file -- defconf.system --
